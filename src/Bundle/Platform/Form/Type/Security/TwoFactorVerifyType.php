<?php

declare(strict_types=1);

/*
 * This file is part of SolidWorx Platform project.
 *
 * (c) Pierre du Plessis <open-source@solidworx.co>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace SolidWorx\Platform\PlatformBundle\Form\Type\Security;

use SolidWorx\Platform\PlatformBundle\Validator\Constraint\TwoFactorCode;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\HiddenType;
use Symfony\Component\Form\Extension\Core\Type\NumberType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Validator\Constraints\NotBlank;

final class TwoFactorVerifyType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder
            ->add('code', NumberType::class, [
                'label' => 'Enter the verification code generated by your mobile application.',
                'required' => true,
                'html5' => true,
                'input' => 'string',
                'attr' => [
                    'maxlength' => 6,
                    'autocomplete' => 'one-time-code',
                    'autofocus' => 'autofocus',
                    'pattern' => '[0-9]*',
                ],
                'constraints' => [
                    new NotBlank(),
                    new TwoFactorCode(secret: $options['secret']),
                ],
            ])
            ->add('secret', HiddenType::class, [
                'data' => $options['secret'],
            ]);
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setRequired('secret');
        $resolver->setAllowedTypes('secret', 'string');
    }
}
